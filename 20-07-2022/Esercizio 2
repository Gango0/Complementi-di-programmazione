#include <stdio.h>
#include <stdlib.h>
#include <stdbool.h>

#include "aux.h"

///2.1///
int posizioni_alternanza_aux(TipoLista l, int pari,int disp,int n){  
  if(estVuota(l)) return n;
  if(n%2==0 && car(l)!=pari || n%2!=0 && car(l)!=disp) return n; //se il numero corrente è in posizione pari/dispari e NON è uguale a pari/dispari(fissi),intorrompi; 
  return posizioni_alternanza_aux(cdr(l),pari,disp,n+1); //altrimenti vai avanti incrementando la lunghezza del prefisso;
}

int posizioni_alternanza(TipoLista l) {
	if(estVuota(l)) return 0;
  	int pari=car(l); //pari è il primo carattere in posizione pari, è FISSO!
  	int disp;
  	if(!estVuota(cdr(l))) disp=car(cdr(l)); //dispari è il primo carattere in posizione dispari, è FISSO!
  	return posizioni_alternanza_aux(l,pari,disp,0);
}

///2.2///

TipoLista resto(TipoLista l,int pos_alt){
  if(estVuota(l)) return listaVuota();
  if(pos_alt<=0) return cons(car(l),resto(cdr(l),pos_alt-1));
  return resto(cdr(l),pos_alt-1);                                   
}


//funzione principale
char * prefisso_alternante(TipoLista *liste, int n) {
  int leng_max=0,riga,len;
  for(int i=0;i<n;i++){
    int prefisso=posizioni_alternanza(liste[i]);
    if (prefisso>leng_max){
      riga=i;
      leng_max=prefisso;
    }
  }
    TipoLista restante=resto(liste[riga],leng_max);
    len=leng(restante);
    char* ris=(char*)malloc(len*sizeof(char));
    for(int j=0;j<len;j++){
      ris[j]=car(restante);
      restante=cdr(restante);
    }
    ris[len]='\0';
  return ris;
 
}


