#include <stdio.h>
#include <stdlib.h>
#include <stdbool.h>
#include <math.h>
#include "aux.h"

char est_presente_pari_o_dispari(Mat*m,int k,int row,int col){ //questa funzione controlla se un elemento è presente nella matrice in una QUALASIASI posizione PRECEDENTE alla sua;
  for(int i=0;i<=row;i++){ 
    if(i!=row){          		//mi trovo su una riga diversa da quella in cui si trova l'elemento di cui voglio controllare la presenza (questo mi permette di scorrere TUTTE LE COLONNE DELLA MATRICE di quella riga);              
    for(int j=0;j<m->cols;j++){  
      if(m->mat[i][j]==k){
        if(i%2==0) return 'p'; //restituisce 'p' se è presente in una riga pari,
        else if(i%2!=0) return 'd'; //restituisce 'd' se è presente in una riga dispari.
    	}
  	  }
    }
  else{ //mi trovo nella riga in cui c'è l'elemento di cui voglio controllare la presenza (dunque mi devo fermare alla colonna precedente,altrimenti conterei l'elemento stesso);
     for(int j=0;j<col;j++){
      if(m->mat[i][j]==k){
        if(i%2==0) return 'p'; //restituisce 'p' se è presente in una riga pari,
        else if(i%2!=0) return 'd'; //restituisce 'd' se è presente in una riga dispari.
    	}
  	  }  
  	}
  }
 return 'n'; //restituisce 'n' se l'elemento non è presente in una posizione precedente;
}



Mat * prima_gli_unici(Mat *m){
Mat* ris=mat_alloc(m->rows,m->cols); //crea una matrice delle stesse dimensioni di quella di partenza
for(int i=0;i<m->rows;i++){
    for(int j=0;j<m->cols;j++){
      if(est_presente_pari_o_dispari(m,m->mat[i][j],i,j)=='p') ris->mat[i][j]=-2; //se l'elemento è presente in una posizione pari si trasforma in -2;
      else if(est_presente_pari_o_dispari(m,m->mat[i][j],i,j)=='d') ris->mat[i][j]=-1; //se l'elemento è presente in una posizione dispari si trasforma in -1;
      else if(est_presente_pari_o_dispari(m,m->mat[i][j],i,j)=='n') ris->mat[i][j]=m->mat[i][j]; //se non è presente resta invariato.
    }
  }
  return ris;
}
