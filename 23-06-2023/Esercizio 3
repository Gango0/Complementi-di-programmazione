REGOLE: Per svolgere l’esercizio usare esclusivamente le funzioni del tipo astratto albero binario fornite.
**********************************TRACCIA*************************************
Si implementi la funzione:
TipoAlbero limita_albero(TipoAlbero a, int k);
che, dato un albero a ed un intero k, restituisca un nuovo albero avente la stessa struttura di a e in cui il valore di ciascun nodo n è assegnato come segue: 
se la somma dei valori nel percorso dalla radice ad n (incluso) è, nell’albero a, minore o uguale a k, allora il valore del nodo n nell’albero 
restituito rimane invariato; altrimenti, il valore del nodo n è pari a 0.
Si assuma che il valore dei nodi di a sia maggiore o uguale a 0.

ESEMPIO:
Dato l'albero
      0
     / \
    3   3
   /   / \
  2   4   8
     /   / \
    1   4   1

e k=7, l'output sarà:

      0
     / \
    3   3
   /   / \
  2   4   0
     /   / \
    0   0   0

***********************IMPLEMENTAZIONE***************************

#include <stdio.h>
#include <stdlib.h>
#include <stdbool.h>
#include "aux.h"

TipoAlbero limita_aux(TipoAlbero a,int somma, int k){
  if(estVuoto(a)) return albBinVuoto();
  somma+=radice(a);
  if(somma<=k) return creaAlbBin(radice(a),limita_aux(sinistro(a),somma,k),limita_aux(destro(a),somma,k));
  else return creaAlbBin(0,limita_aux(sinistro(a),somma,k),limita_aux(destro(a),somma,k));
}

//FUNZIONE PRINCIPALE
TipoAlbero limita_albero(TipoAlbero a, int k) {
  return limita_aux(a,0,k);
}
